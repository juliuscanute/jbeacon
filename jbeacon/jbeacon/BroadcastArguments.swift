//
//  BeaconCommand.swift
//  jbeacon
//
//  Created by Julius Canute on 9/2/21.
//

import Foundation
import Bluetooth
import BluetoothDarwin
import CLIKit
import ColorizeSwift

class BroadcastArguments: Command {
    let description = "jbeacon - Broadcast beacon"
    static let uuidRegex = #"\b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b"#
    static let uint16Regex = #"^(-?(\d{1,4}|[012]\d{4}|3[01]\d{3}|32[0123456]\d{2}|327[012345]\d{1}|3276[01234567])|-32768)"#
    static let uint8Regex = #"\b(1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\b"#
    let beaconCommand: BeaconCommand
    init(controller: HostInterface) {
        self.beaconCommand = BeaconCommand(controller: controller)
    }
    
    @CommandFlag(name: "help", short: "h", description: "Prints usage instructions")
    var help: Bool
    
    @CommandFlag(name: "verbose", short: "v", description: "Prints verbose output")
    var verbose: Bool
    
    @CommandOption(short: "uuid", default: UUID().uuidString, regex: uuidRegex, description: "Specify UUID to Broadcast")
    var uuid: String
    
    @CommandOption(short: "manufacturer", default: 0, regex: uint16Regex, description: "Specify Manufacturer")
    var manufacturer: UInt16
    
    @CommandOption(short: "major", default: 0, regex: uint16Regex, description: "Specify Major")
    var major: UInt16
    
    @CommandOption(short: "minor", default: 0, regex: uint16Regex, description: "Specify Minor")
    var minor: UInt16
    
    @CommandOption(short: "measuredPower",  default: 128, regex: uint8Regex, description: "Specify Measured Power")
    var measuredPower: UInt8
    
    func run() throws {
        try beaconCommand.broadcast(verbose: verbose, uuid: uuid, manufacturer: manufacturer, major: major, minor: minor, measuredPower: measuredPower)
        print("Broadcast Started ðŸ“¶".green().bold())
    }
    
    func stop() {
        do {
            try beaconCommand.stopBeacon()
        } catch { }
    }
    
    func printUsage() {
        Console.print("Beacon Editor CLI")
        Console.print("")
        Console.print("Usage:")
        Console.print(" jbeacon -manufacturer <manufacturer-id>")
        Console.print(" jbeacon -h | --help")
        Console.print(" jbeacon -v | --verbose")
        Console.print(" jbeacon -uuid <uuid>")
        Console.print(" jbeacon -major <major>")
        Console.print(" jbeacon -minor <minor>")
        Console.print(" jbeacon -measuredPower <tx>")
        Console.print(" jbeacon -manufacturer <manufacturer-id> -uuid <uuid> -major <major> -minor <minor> -measuredPower <tx>")
        Console.print("")
        Console.print("Options:")
        Console.print(" -h --help show usage instructions")
        Console.print(" -manufacturer 0-65535 default is 0")
        Console.print(" -uuid XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX where X can be {0,1,2,3,4,5,6,7,8,9,0,a,A,b,B,c,C,d,D,e,E,f,F}, uuid is auto generated by default")
        Console.print(" -major 0-65535 default is 0")
        Console.print(" -minor 0-65535 default is 0")
        Console.print(" -measuredPower 0-255 default is 0")
    }
}
